name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  android-instrumented-tests:
    name: Run Instrumented Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Grant gradlew execute permission
        run: chmod +x ./gradlew

      - name: Accept licenses
        run: yes | sdkmanager --licenses

      - name: Install emulator and system image
        run: sdkmanager "platform-tools" "platforms;android-34" "system-images;android-34;google_apis;x86_64" "emulator"

      - name: Create AVD
        run: echo "no" | avdmanager create avd -n test -k "system-images;android-34;google_apis;x86_64" --device "pixel_5"

      - name: Start Emulator
        run: |
          nohup $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-boot-anim -no-window -gpu swiftshader_indirect -accel off > emulator.log 2>&1 &
          echo "Waiting for emulator to boot..."
          $ANDROID_HOME/platform-tools/adb wait-for-device
          boot_completed=""
          export PATH=$PATH:$ANDROID_HOME/platform-tools
          until [[ "$boot_completed" == "1" ]]; do
            boot_completed=$($ANDROID_HOME/platform-tools/adb shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
            echo "Boot completed: $boot_completed"
            sleep 5
          done
          echo "Emulator booted successfully."
          $ANDROID_HOME/platform-tools/adb shell input keyevent 82

      - name: Assemble Debug APK
        run: ./gradlew assembleDebug

      - name: Run Instrumented Tests
        run: ./gradlew connectedDebugAndroidTest

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: androidTest-results
          path: app/build/reports/androidTests/connected/

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/*.apk

      - name: Grade Test Result
        if: always()
        run: |
          echo "===================="
          echo "üìù Grading Summary:"
          REPORT_FILE="app/build/reports/androidTests/connected/index.html"
          if grep -q "FAILURES" "$REPORT_FILE"; then
            echo "‚ùå Some tests failed."
            echo "Grade: 5/10"
            exit 1
          else
            echo "‚úÖ All tests passed."
            echo "Grade: 10/10"
          fi
